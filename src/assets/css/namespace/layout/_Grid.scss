/*
---
name: l-Grid
namespace: l-
category: Layout
---

標準的なグリッドシステムです。カラムごとに任意の値を指定したい場合に使います。
カラム間の余白は幅を`$l-grid-column-gap`で統一しています。

以下のような指定ができます。

- `.l-Grid_Item-8of12` カラム数の指定。
- `.l-Grid-reverse` カラムの反転。
- `.l-Grid-center` カラムのセンタリング。
- `.l-Grid-middle` カラムの垂直配置。

```jade
.l-Wrapper
  .l-Grid
    .l-Grid_Item.l-Grid_Item-8of12Md
      .test-Box One<br>1/1 → 8/12
    .l-Grid_Item.l-Grid_Item-4of12Md
      .test-Box Two<br>1/1 → 4/12
```

```jade
.l-Wrapper
  .l-Grid.l-Grid-reversMd
    .l-Grid_Item.l-Grid_Item-8of12Md
      .test-Box One<br>1/1 → 8/12
    .l-Grid_Item.l-Grid_Item-4of12Md
      .test-Box Two<br>1/1 → 4/12
```

```jade
.l-Wrapper
  .l-Grid.l-Grid-centerMd
    .l-Grid_Item.l-Grid_Item-8of12Md
      .test-Box One<br>1/1 → 8/12
```
*/
// カラムの左右の余白（ガター）を指定します。
// すべて指定してください。
$l-grid-column-gap: (
  "initial": $grid-column-gap,
  "sm": $grid-column-gap,
  "md": $grid-column-gap-md,
  "lg": $grid-column-gap-md,
  "xl": $grid-column-gap-md,
) !default;

.l-Grid {
  -js-display: flex;
  display: flex;
  flex-wrap: wrap;
  margin-left: rem(map-get($l-grid-column-gap, initial) * -1);
  padding-left: 0;
  list-style-type: none;
}

@each $name, $breakpoint in $global-breakpoint-up {
  @media #{$breakpoint} {
    .l-Grid {
      margin-left: rem(map-get($l-grid-column-gap, $name) * -1);
    }
  }
}

.l-Grid_Item {
  flex-basis: 100%;
  max-width: 100%;
  padding-left: rem(map-get($l-grid-column-gap, initial));

  & > :first-child {
    margin-top: 0;
  }

  & > :last-child {
    margin-bottom: 0;
  }
}

@each $name, $breakpoint in $global-breakpoint-up {
  @media #{$breakpoint} {
    .l-Grid_Item {
      padding-left: rem(map-get($l-grid-column-gap, $name));
    }
  }
}

@mixin column($key: null) {
  $columns: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 !default;
  $suffix: to-lower-camel-case(#{$key}) !default;

  @each $column in $columns {
    .l-Grid_Item-#{$column}of12#{$suffix} {
      flex-basis: percentage($column / 12);
      max-width: percentage($column / 12);
    }
  }
}

/**
 * 6/12と6/12のような均等なカラムを生成します。
 */
@include column();

@each $name, $breakpoint in $global-breakpoint-up {
  @media #{$breakpoint} {
    @include column($name);
  }
}

/**
 * 要素の垂直位置を上寄せにします。
 */
.l-Grid-top {
  align-items: flex-start;
}

@each $name, $breakpoint in $global-breakpoint-up {
  @media #{$breakpoint} {
    .l-Grid-top#{to-lower-camel-case($name)} {
      align-items: flex-start;
    }
  }
}

/**
 * 要素の垂直位置を真ん中寄せにします。
 */
.l-Grid-middle {
  align-items: center;
}

@each $name, $breakpoint in $global-breakpoint-up {
  @media #{$breakpoint} {
    .l-Grid-middle#{to-lower-camel-case($name)} {
      align-items: center;
    }
  }
}

/**
 * 要素の垂直位置を下寄せにします。
 */
.l-Grid-bottom {
  align-items: flex-end;
}

@each $name, $breakpoint in $global-breakpoint-up {
  @media #{$breakpoint} {
    .l-Grid-bottom#{to-lower-camel-case($name)} {
      align-items: flex-end;
    }
  }
}

/**
 * 要素を中央寄せ、要素内は左寄せにします。
 */
.l-Grid-center {
  justify-content: center;
}

@each $name, $breakpoint in $global-breakpoint-up {
  @media #{$breakpoint} {
    .l-Grid-center#{to-lower-camel-case($name)} {
      justify-content: center;
    }
  }
}

/**
 * 要素を右寄せ、要素内は左寄せにします。
 */
.l-Grid-right {
  justify-content: flex-end;
}

@each $name, $breakpoint in $global-breakpoint-up {
  @media #{$breakpoint} {
    .l-Grid-right#{to-lower-camel-case($name)} {
      justify-content: flex-end;
    }
  }
}

/**
 * `.l-Grids_Item`の表示順を逆にします。
 * A,B → B,A
 */
.l-Grid-reverse {
  flex-direction: row-reverse;
}

@each $name, $breakpoint in $global-breakpoint-up {
  @media #{$breakpoint} {
    .l-Grid-reverse#{to-lower-camel-case($name)} {
      flex-direction: row-reverse;
    }
  }
}

/**
 * `.l-Grids_Item`の表示順を戻します。
 * B,A → A,B
 */
.l-Grid-row {
  flex-direction: row;
}

@each $name, $breakpoint in $global-breakpoint-up {
  @media #{$breakpoint} {
    .l-Grid-row#{to-lower-camel-case($name)} {
      flex-direction: row;
    }
  }
}
