 /* #Grids
   -------------------------------------------------------------------------- */
/*
---
name: Grids
category: Structure
tag: Global
---

グリッドシステムです。1/2や1/3のような均等なカラムや、8/12と4/12のようなよく使うカラムの指定ができます。
いずれも親要素である`.st-Grids`に追加で指定していきます。

カラム間の余白は幅を`$st-grids-gutter`、高さを`$st-grids-margin`で統一しています。

`.st-Grids`同士が同じ階層にある場合は間に余白がつきます。

以下のような指定ができます。

- 1/2から1/5までの均等なカラム指定。
- 8/12と4/12のようなカラム指定。
- ブレイクポイント（`.st-Grids-col*Md`、`.st-Grids-col*Lg`）の指定。

```jade
.st-Grids.st-Grids-col8to4Md
  .st-Grids_Item
    img(src="https://placehold.jp/1200x800.png" alt="")
  .st-Grids_Item
    img(src="https://placehold.jp/600x400.png" alt="")

.st-Grids.st-Grids-col8to4Md.st-Grids-reversMd
  .st-Grids_Item
    img(src="https://placehold.jp/1200x800.png" alt="")
  .st-Grids_Item
    img(src="https://placehold.jp/600x400.png" alt="")

.st-Grids.st-Grids-col2Md
  .st-Grids_Item
    img(src="https://placehold.jp/600x400.png" alt="")
  .st-Grids_Item
    img(src="https://placehold.jp/600x400.png" alt="")

.st-Grids.st-Grids-col2.st-Grids-col3Md
  .st-Grids_Item
    img(src="https://placehold.jp/600x400.png" alt="")
  .st-Grids_Item
    img(src="https://placehold.jp/600x400.png" alt="")
  .st-Grids_Item
    img(src="https://placehold.jp/600x400.png" alt="")
  .st-Grids_Item
    img(src="https://placehold.jp/600x400.png" alt="")
  .st-Grids_Item
    img(src="https://placehold.jp/600x400.png" alt="")
```
*/
$st-grids-gutter: 2rem;
$st-grids-margin: 2rem;

.st-Grids {
  margin-left: -$st-grids-gutter;
  padding-left: 0;
  list-style-type: none;
  display: block;
  font-size: 0;

  /* 同じ階層にある`.st-Grids`同士の間に余白を入れます。 */
  &:not(:first-of-type) {
    margin-top: $st-grids-margin;
  }
}

.st-Grids_Item {
  display: inline-block;
  width: 100%;
  padding-left: $st-grids-gutter;
  font-size: medium;
  font-size: 1rem;
  vertical-align: top;
}

/* 1 Column */
.st-Grids_Item {
  &:nth-of-type(n+2) {
    margin-top: $st-grids-margin;
  }
}

/* 2 Columns */
.st-Grids-col2 > .st-Grids_Item {
  width: percentage(1 / 2);

  /**
   * いったんすべての`margin-top`をリセットします。
   * `:nth-of-type(n+1)`は1つ目以降のすべての要素に適応されます。
   * リセット後に対象となる要素に`margin-top`を指定します。
   */
  &:nth-of-type(n+1) {
    margin-top: 0;
  }
  &:nth-of-type(n+3) {
    margin-top: $st-grids-margin;
  }
}
@include mq-up(md) {
  .st-Grids-col2Md > .st-Grids_Item {
    width: percentage(1 / 2);

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+3) {
      margin-top: $st-grids-margin;
    }
  }
}
@include mq-up(lg) {
  .st-Grids-col2Lg > .st-Grids_Item {
    width: percentage(1 / 2);

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+3) {
      margin-top: $st-grids-margin;
    }
  }
}

/* 3 Columns */
.st-Grids-col3 > .st-Grids_Item {
  width: percentage(1 / 3);

  &:nth-of-type(n+1) {
    margin-top: 0;
  }
  &:nth-of-type(n+4) {
    margin-top: $st-grids-margin;
  }
}
@include mq-up(md) {
  .st-Grids-col3Md > .st-Grids_Item {
    width: percentage(1 / 3);

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+4) {
      margin-top: $st-grids-margin;
    }
  }
}
@include mq-up(lg) {
  .st-Grids-col3Lg > .st-Grids_Item {
    width: percentage(1 / 3);

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+4) {
      margin-top: $st-grids-margin;
    }
  }
}

/* 4 Columns */
.st-Grids-col4 > .st-Grids_Item {
  width: percentage(1 / 4);

  &:nth-of-type(n+1) {
    margin-top: 0;
  }
  &:nth-of-type(n+5) {
    margin-top: $st-grids-margin;
  }
}
@include mq-up(md) {
  .st-Grids-col4Md > .st-Grids_Item {
    width: percentage(1 / 4);

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+5) {
      margin-top: $st-grids-margin;
    }
  }
}
@include mq-up(lg) {
  .st-Grids-col4Lg > .st-Grids_Item {
    width: percentage(1 / 4);

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+5) {
      margin-top: $st-grids-margin;
    }
  }
}

/* 5 Columns */
.st-Grids-col5 > .st-Grids_Item {
  width: percentage(1 / 5);

  &:nth-of-type(n+1) {
    margin-top: 0;
  }
  &:nth-of-type(n+6) {
    margin-top: $st-grids-margin;
  }
}
@include mq-up(md) {
  .st-Grids-col5Md > .st-Grids_Item {
    width: percentage(1 / 5);

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+6) {
      margin-top: $st-grids-margin;
    }
  }
}
@include mq-up(lg) {
  .st-Grids-col5Lg > .st-Grids_Item {
    width: percentage(1 / 5);

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+6) {
      margin-top: $st-grids-margin;
    }
  }
}

/**
 * `.st-Grids_Item`の表示順を逆にします。
 * A,B → B,A
 */
.st-Grids-reverse {
  text-align: left;
  direction: rtl;

  & > .st-Grids_Item {
    text-align: left;
    direction: ltr;
  }
}
@include mq-up(md) {
  .st-Grids-reversMd {
    text-align: left;
    direction: rtl;

    & > .st-Grids_Item {
      text-align: left;
      direction: ltr;
    }
  }
}
@include mq-up(lg) {
  .st-Grids-reverseLg {
    text-align: left;
    direction: rtl;

    & > .st-Grids_Item {
      text-align: left;
      direction: ltr;
    }
  }
}

/* 8/12, 4/12 */
.st-Grids-col8to4 > .st-Grids_Item {
  &:nth-of-type(odd) {
    width: percentage(8 / 12);
  }

  &:nth-of-type(even) {
    width: percentage(4 / 12);
  }

  &:nth-of-type(n+1) {
    margin-top: 0;
  }
  &:nth-of-type(n+3) {
    margin-top: $st-grids-margin;
  }
}
@include mq-up(md) {
  .st-Grids-col8to4Md > .st-Grids_Item {
    &:nth-of-type(odd) {
      width: percentage(8 / 12);
    }

    &:nth-of-type(even) {
      width: percentage(4 / 12);
    }

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+3) {
      margin-top: $st-grids-margin;
    }
  }
}
@include mq-up(lg) {
  .st-Grids-col8to4Lg > .st-Grids_Item {
    &:nth-of-type(odd) {
      width: percentage(8 / 12);
    }

    &:nth-of-type(even) {
      width: percentage(4 / 12);
    }

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+3) {
      margin-top: $st-grids-margin;
    }
  }
}

/* 7/12, 5/12 */
.st-Grids-col7to5 > .st-Grids_Item {
  &:nth-of-type(odd) {
    width: percentage(7 / 12);
  }

  &:nth-of-type(even) {
    width: percentage(5 / 12);
  }

  &:nth-of-type(n+1) {
    margin-top: 0;
  }
  &:nth-of-type(n+3) {
    margin-top: $st-grids-margin;
  }
}
@include mq-up(md) {
  .st-Grids-col7to5Md > .st-Grids_Item {
    &:nth-of-type(odd) {
      width: percentage(7 / 12);
    }

    &:nth-of-type(even) {
      width: percentage(5 / 12);
    }

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+3) {
      margin-top: $st-grids-margin;
    }
  }
}
@include mq-up(lg) {
  .st-Grids-col7to5Lg > .st-Grids_Item {
    &:nth-of-type(odd) {
      width: percentage(7 / 12);
    }

    &:nth-of-type(even) {
      width: percentage(5 / 12);
    }

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+3) {
      margin-top: $st-grids-margin;
    }
  }
}

/* 9/12, 3/12 */
.st-Grids-col9to3 > .st-Grids_Item {
  &:nth-of-type(odd) {
    width: percentage(9 / 12);
  }

  &:nth-of-type(even) {
    width: percentage(3 / 12);
  }

  &:nth-of-type(n+1) {
    margin-top: 0;
  }
  &:nth-of-type(n+3) {
    margin-top: $st-grids-margin;
  }
}
@include mq-up(md) {
  .st-Grids-col9to3Md > .st-Grids_Item {
    &:nth-of-type(odd) {
      width: percentage(9 / 12);
    }

    &:nth-of-type(even) {
      width: percentage(3 / 12);
    }

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+3) {
      margin-top: $st-grids-margin;
    }
  }
}
@include mq-up(lg) {
  .st-Grids-col9to3Lg > .st-Grids_Item {
    &:nth-of-type(odd) {
      width: percentage(9 / 12);
    }

    &:nth-of-type(even) {
      width: percentage(3 / 12);
    }

    &:nth-of-type(n+1) {
      margin-top: 0;
    }
    &:nth-of-type(n+3) {
      margin-top: $st-grids-margin;
    }
  }
}
